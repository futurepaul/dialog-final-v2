name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    
    - name: Checkout nak (with negentropy patch)
      run: |
        git clone https://github.com/fiatjaf/nak.git /tmp/nak
        cd /tmp/nak
        if [ -f "$GITHUB_WORKSPACE/nak-negentropy.patch" ]; then
          git apply "$GITHUB_WORKSPACE/nak-negentropy.patch"
        fi

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('/tmp/nak/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build nak (negentropy)
      run: |
        cd /tmp/nak
        go mod download
        go build -o $GITHUB_WORKSPACE/nak-negentropy .
        chmod +x $GITHUB_WORKSPACE/nak-negentropy

    - name: Validate test key
      env:
        DIALOG_NSEC: ${{ secrets.DIALOG_NSEC_TEST }}
      run: cargo run -p dialog_cli -- --print-config
    
    - name: Run dialog_lib tests
      working-directory: dialog_lib
      env:
        DIALOG_DATA_DIR: ${{ runner.temp }}/dialog-${{ github.run_id }}
        DIALOG_NSEC_TEST: ${{ secrets.DIALOG_NSEC_TEST }}
      run: cargo test --verbose -- --test-threads=1 --nocapture

    - name: Run dialog_uniffi integration test
      working-directory: .
      env:
        DIALOG_DATA_DIR: ${{ runner.temp }}/dialog-${{ github.run_id }}
        DIALOG_NSEC_TEST: ${{ secrets.DIALOG_NSEC_TEST }}
      run: cargo test -p dialog_uniffi --test integration -- --test-threads=1 --nocapture
    
    - name: Run clippy
      working-directory: dialog_lib
      run: cargo clippy -- -D warnings
    
    - name: Check formatting
      working-directory: dialog_lib
      run: cargo fmt -- --check
    
    - name: Build CLI
      working-directory: dialog_cli
      run: cargo build --release
    
    - name: Test CLI persistence
      env:
        DIALOG_DATA_DIR: ${{ runner.temp }}/dialog-${{ github.run_id }}
        DIALOG_NSEC: ${{ secrets.DIALOG_NSEC_TEST }}
      run: |
        chmod +x test_cli_persistence.sh
        ./test_cli_persistence.sh
